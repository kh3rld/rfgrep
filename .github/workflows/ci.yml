name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings"

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable, 1.87.0]  # MSRV (Minimum Supported Rust Version)
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust (${{ matrix.rust }})
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Run tests
        run: cargo test --all-features --workspace --verbose

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy
      
      - name: Check formatting
        run: cargo fmt --all -- --check
      
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      
      - name: Check for unused dependencies
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      
      - name: Build docs
        run: cargo doc --no-deps --all-features
      
      - name: Validate docs
        run: cargo doc --no-deps --all-features --document-private-items

  publish:
    name: Publish
    needs: [test, lint, docs]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      
      - name: Publish to crates.io
        run: |
          cargo publish --dry-run --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
          cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}